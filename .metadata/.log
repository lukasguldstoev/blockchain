!SESSION 2021-01-14 12:20:31.536 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=da_DK
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-01-14 12:20:35.075
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-01-14 12:20:35.075
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5018b56b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@360a3106,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-01-14 12:20:39.133
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Lukas'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-01-14 12:22:13.693 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=da_DK
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-01-14 12:22:17.479
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-01-14 12:22:17.479
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@124ff64d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@75aa7703,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-01-14 12:22:19.020
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Lukas'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-01-14 12:24:16.225 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=da_DK
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-01-14 12:24:19.805
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-01-14 12:24:19.805
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@614d7fbf,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6c06b1bc,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-01-14 12:24:21.330
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Lukas'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2021-01-14 12:24:36.334
!MESSAGE 
!SESSION 2021-01-14 14:39:22.088 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=da_DK
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-01-14 14:39:28.519
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-01-14 14:39:28.519
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7323c38c,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2c02a007,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-01-14 14:39:31.059
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Lukas'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.egit.core 4 0 2021-01-14 14:39:31.081
!MESSAGE Remove repository mapping of Git mapped resource for which project or mapped git repository has disappeared: 'RepositoryMapping[<empty> -> '.git', absolute path: 'C:/Users/Lukas/Documents/engineering/dtu/3ugerssem2/blockchain/blockchain/.git' ]'
!STACK 0
java.io.FileNotFoundException: 
	at org.eclipse.egit.core.project.GitProjectData.logAndUnmapGoneMappedResource(GitProjectData.java:726)
	at org.eclipse.egit.core.project.GitProjectData.map(GitProjectData.java:689)
	at org.eclipse.egit.core.project.GitProjectData.remapAll(GitProjectData.java:653)
	at org.eclipse.egit.core.project.GitProjectData.load(GitProjectData.java:636)
	at org.eclipse.egit.core.project.GitProjectData.get(GitProjectData.java:221)
	at org.eclipse.egit.core.project.RepositoryMapping.getProjectData(RepositoryMapping.java:335)
	at org.eclipse.egit.core.project.RepositoryMapping.findMapping(RepositoryMapping.java:356)
	at org.eclipse.egit.core.project.RepositoryMapping.getMapping(RepositoryMapping.java:296)
	at org.eclipse.egit.core.internal.util.ResourceUtil.getRepository(ResourceUtil.java:709)
	at org.eclipse.egit.ui.internal.resources.ResourceStateFactory.getIndexDiffDataOrNull(ResourceStateFactory.java:103)
	at org.eclipse.egit.ui.internal.decorators.GitLightweightDecorator.decorateResource(GitLightweightDecorator.java:192)
	at org.eclipse.egit.ui.internal.decorators.GitLightweightDecorator.decorate(GitLightweightDecorator.java:170)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:247)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:386)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:362)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-01-14 20:16:58.236
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package blockchain;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Image;
import java.awt.Rectangle;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.io.InputStream;
import java.security.PublicKey;
import java.util.Arrays;

import javax.imageio.ImageIO;
import javax.swing.BorderFactory;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.SwingConstants;


public class WalletGUI extends JFrame implements ActionListener {
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	protected static WalletGUI win;
	protected static JPanel wrap;
	protected static int height = 500;
	protected static int width = 600;
	protected static int leftWidth = (int)((width*0.9) - 150);
	
	private String myAddress = 
	
	public void initGui() throws IOException {
		win = new WalletGUI();
		win.setSize(new Dimension(width,height));
		win.add(win.gui());
	    try {
	        InputStream imageInputStream = win.getClass().getResourceAsStream("./icon.png");
		    BufferedImage bufferedImage = ImageIO.read(imageInputStream);
		    win.setIconImage(bufferedImage);
		} catch (IOException exception) {
		    exception.printStackTrace();
		}
		win.setTitle("DTU cryptocoin wallet");
		win.setResizable(false);
		win.pack();
		win.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		win.setVisible(true);

	}
	
	public JPanel gui() throws IOException {

		getContentPane().setLayout(new BorderLayout());

		// init and set wrapper obj. defaults
		wrap = new JPanel();
		wrap.setBackground(new Color(235,235,235));
		wrap.setBorder(null);
		
		/**
		 * describing left area
		 */
 		
		// add left layout
		JPanel left = new JPanel();
		left.setLayout(new BoxLayout(left,BoxLayout.PAGE_AXIS));
		left.setBorder(BorderFactory.createEmptyBorder(0, 25, 25, 25));
		left.setPreferredSize(new Dimension(leftWidth, height));

		// header wrapper left
		JPanel headerWrapper = new JPanel();
		headerWrapper.setMaximumSize(new Dimension(width,75));
		headerWrapper.setPreferredSize(new Dimension(width,75));
		headerWrapper.setLayout(new BoxLayout(headerWrapper,BoxLayout.LINE_AXIS));
		
		// header
		JLabel header = new JLabel("DTU wallet");
		header.setMaximumSize(new Dimension(300,50));
		header.setFont(new Font(Font.SANS_SERIF, Font.TRUETYPE_FONT, 22));
		
		headerWrapper.add(header);
		left.add(headerWrapper,BorderLayout.NORTH);
	
		
		// my wallet status left
		JPanel walletStatus = new JPanel();
		walletStatus.setLayout(new BoxLayout(walletStatus,BoxLayout.PAGE_AXIS));
		walletStatus.setPreferredSize(new Dimension(width, 100));
		
		// wallet balance
		JPanel balanceWrap = new JPanel();	
		balanceWrap.setLayout(new BoxLayout(balanceWrap,BoxLayout.LINE_AXIS));	
		balanceWrap.setMaximumSize(new Dimension(width,30));
		
		JLabel balance = new JLabel("My Balance:    ");
		balance.setFont(new Font(Font.SANS_SERIF,Font.PLAIN,14));
  		
		JLabel balanceValue = new JLabel("16000.00" + " DTUC");
  		balanceValue.setFont(new Font(Font.SANS_SERIF,Font.BOLD,14));
		
  		balanceWrap.add(balance);
		balanceWrap.add(balanceValue);

		
		// pending balance in block nonce proccessing
		JPanel pendingWrap = new JPanel();
		pendingWrap.setLayout(new BoxLayout(pendingWrap,BoxLayout.LINE_AXIS));
 		pendingWrap.setMaximumSize(new Dimension(width,30));

		JLabel pending = new JLabel("Unconfirmed:  ");
		pending.setFont(new Font(Font.SANS_SERIF,Font.PLAIN,14));
		
		JLabel pendingValue = new JLabel("0.00" + " DTUC");
		pendingValue.setFont(new Font(Font.SANS_SERIF,Font.BOLD,14));
		
		pendingWrap.add(pending);
		pendingWrap.add(pendingValue);
		
		walletStatus.add(balanceWrap);
		walletStatus.add(pendingWrap);
		
		left.add(walletStatus);
		
		
		// my wallet info center
		JPanel addresses = new JPanel();
		addresses.setLayout(new BoxLayout(addresses, BoxLayout.PAGE_AXIS));
		addresses.setMaximumSize(new Dimension(width,100));
		addresses.setPreferredSize(new Dimension(width,100));
		addresses.setMinimumSize(new Dimension(width,100));
		
		// my wallet address
		JPanel myAddressPanel = new JPanel();
		myAddressPanel.setMinimumSize(new Dimension(width,50));
		myAddressPanel.setMaximumSize(new Dimension(width,50));
		myAddressPanel.setPreferredSize(new Dimension(width,50));
		myAddressPanel.setBorder(BorderFactory.createMatteBorder(20, 0, 0, 0, getForeground()));
		
		JLabel myAddress = new JLabel("My Address");
		myAddressPanel.setLayout(new BoxLayout(myAddressPanel, BoxLayout.LINE_AXIS));
		
		myAddressPanel.add(myAddress);
		//byte[] c = Blockchain.walletA.publicKey.getEncoded();
		//String b = Arrays.toString(c);
		JTextField hexAddress = new JTextField("code");
		hexAddress.setEditable(false); 

		hexAddress.setLayout(new BoxLayout(hexAddress, BoxLayout.LINE_AXIS));
		hexAddress.setMaximumSize(new Dimension(width,30));
		hexAddress.setMinimumSize(new Dimension(width,30));
		hexAddress.setPreferredSize(new Dimension(width,30));
	 
		addresses.add(myAddressPanel);
		addresses.add(hexAddress);
		left.add(addresses);

		
		
		
		
		
		
		
		
		
		// send to address area left
		JPanel sendCoinsWrapper = new JPanel();
		sendCoinsWrapper.setLayout(new BoxLayout(sendCoinsWrapper,BoxLayout.LINE_AXIS));
		sendCoinsWrapper.setMaximumSize(new Dimension(leftWidth,250));
		sendCoinsWrapper.setMinimumSize(new Dimension(leftWidth,250));
		sendCoinsWrapper.setPreferredSize(new Dimension(leftWidth,250));
	 
		JPanel sendCoins = new JPanel();
		
		sendCoins.setLayout(new BoxLayout(sendCoins,BoxLayout.PAGE_AXIS));
		sendCoins.setMaximumSize(new Dimension(leftWidth,250));
		sendCoins.setMinimumSize(new Dimension(leftWidth,250));
		sendCoins.setPreferredSize(new Dimension(leftWidth,250));
	 
		// title
		JLabel title = new JLabel("Send coins"); 
		title.setFont(new Font(Font.SANS_SERIF,Font.BOLD,13));	

		title.setMaximumSize(new Dimension(width,50));
		title.setMinimumSize(new Dimension(width,50));
		title.setPreferredSize(new Dimension(width,50));
		title.setLayout(new BoxLayout(title, BoxLayout.PAGE_AXIS));
		sendCoins.add(title);
		
		
		// inputs wrapper for coin rec info
		JPanel inputs = new JPanel(); 
		inputs.setLayout(new BoxLayout(inputs,BoxLayout.PAGE_AXIS));

		 
		// address
		JLabel addtitle = new JLabel("Address");
		inputs.add(addtitle);
		
		JTextField recAdd = new JTextField(); 
		recAdd.setMaximumSize(new Dimension(getWidth() + 75,40));		
		
		inputs.add(recAdd);
		
		
		// amount
		JLabel amtitle = new JLabel("Amount");
		inputs.add(amtitle);
		
		JTextField amount = new JTextField();
		amount.setMaximumSize(new Dimension(getWidth() + 75,40));
		
		inputs.add(amount);
		
		
		// submit
		JButton submit = new JButton("Send");
		submit.addActionListener(this);
		submit.setActionCommand("send");
		submit.setBounds(getBounds());
		submit.setMinimumSize(new Dimension(getWidth() - 262, 30));
		submit.setMaximumSize(new Dimension(getWidth() - 262, 30));
		
		
		inputs.add(submit);
		sendCoins.add(inputs);
		sendCoinsWrapper.add(sendCoins);
		
		left.add(sendCoinsWrapper);
		
		
		/**
		 * describing right area
		 */

		// add right layout
		BufferedImage img = ImageIO.read(this.getClass().getResource("./logo.png"));
		JLabel icon = new JLabel(new ImageIcon(img),SwingConstants.LEFT);
		
		// add logo to the right
		JPanel right = new JPanel();
		right.setBorder(BorderFactory.createEmptyBorder(25, 0, 0, 0));
		right.setBackground(new Color(220,220,220));
		right.setPreferredSize(new Dimension(150,height));
		right.add(icon,BorderLayout.WEST);
		
		right.add(new JLabel("Symbol: DTUC"));
		
		
		/**
		 * wrap up
		 */
	
		// add wrapping elements to view
		wrap.add(left);
		wrap.add(right,BorderLayout.EAST);
		
		getContentPane().add(wrap);
		return wrap;
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}

	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3146)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3630)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-01-14 20:16:58.244
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3146)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3630)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-01-14 20:16:58.248
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3146)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3630)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-01-14 20:18:13.427
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package blockchain;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Image;
import java.awt.Rectangle;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.io.InputStream;
import java.security.PublicKey;
import java.util.Arrays;

import javax.imageio.ImageIO;
import javax.swing.BorderFactory;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.SwingConstants;


public class WalletGUI extends JFrame implements ActionListener {
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	protected static WalletGUI win;
	protected static JPanel wrap;
	protected static int height = 500;
	protected static int width = 600;
	protected static int leftWidth = (int)((width*0.9) - 150);
	
	private Wallet myAccount =  Blockchain.walletA;
	private String myKey = .publicKey.toString();
	
	public void initGui() throws IOException {
		win = new WalletGUI();
		win.setSize(new Dimension(width,height));
		win.add(win.gui());
	    try {
	        InputStream imageInputStream = win.getClass().getResourceAsStream("./icon.png");
		    BufferedImage bufferedImage = ImageIO.read(imageInputStream);
		    win.setIconImage(bufferedImage);
		} catch (IOException exception) {
		    exception.printStackTrace();
		}
		win.setTitle("DTU cryptocoin wallet");
		win.setResizable(false);
		win.pack();
		win.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		win.setVisible(true);

	}
	
	public JPanel gui() throws IOException {

		getContentPane().setLayout(new BorderLayout());

		// init and set wrapper obj. defaults
		wrap = new JPanel();
		wrap.setBackground(new Color(235,235,235));
		wrap.setBorder(null);
		
		/**
		 * describing left area
		 */
 		
		// add left layout
		JPanel left = new JPanel();
		left.setLayout(new BoxLayout(left,BoxLayout.PAGE_AXIS));
		left.setBorder(BorderFactory.createEmptyBorder(0, 25, 25, 25));
		left.setPreferredSize(new Dimension(leftWidth, height));

		// header wrapper left
		JPanel headerWrapper = new JPanel();
		headerWrapper.setMaximumSize(new Dimension(width,75));
		headerWrapper.setPreferredSize(new Dimension(width,75));
		headerWrapper.setLayout(new BoxLayout(headerWrapper,BoxLayout.LINE_AXIS));
		
		// header
		JLabel header = new JLabel("DTU wallet");
		header.setMaximumSize(new Dimension(300,50));
		header.setFont(new Font(Font.SANS_SERIF, Font.TRUETYPE_FONT, 22));
		
		headerWrapper.add(header);
		left.add(headerWrapper,BorderLayout.NORTH);
	
		
		// my wallet status left
		JPanel walletStatus = new JPanel();
		walletStatus.setLayout(new BoxLayout(walletStatus,BoxLayout.PAGE_AXIS));
		walletStatus.setPreferredSize(new Dimension(width, 100));
		
		// wallet balance
		JPanel balanceWrap = new JPanel();	
		balanceWrap.setLayout(new BoxLayout(balanceWrap,BoxLayout.LINE_AXIS));	
		balanceWrap.setMaximumSize(new Dimension(width,30));
		
		JLabel balance = new JLabel("My Balance:    ");
		balance.setFont(new Font(Font.SANS_SERIF,Font.PLAIN,14));
  		
		JLabel balanceValue = new JLabel("16000.00" + " DTUC");
  		balanceValue.setFont(new Font(Font.SANS_SERIF,Font.BOLD,14));
		
  		balanceWrap.add(balance);
		balanceWrap.add(balanceValue);

		
		// pending balance in block nonce proccessing
		JPanel pendingWrap = new JPanel();
		pendingWrap.setLayout(new BoxLayout(pendingWrap,BoxLayout.LINE_AXIS));
 		pendingWrap.setMaximumSize(new Dimension(width,30));

		JLabel pending = new JLabel("Unconfirmed:  ");
		pending.setFont(new Font(Font.SANS_SERIF,Font.PLAIN,14));
		
		JLabel pendingValue = new JLabel("0.00" + " DTUC");
		pendingValue.setFont(new Font(Font.SANS_SERIF,Font.BOLD,14));
		
		pendingWrap.add(pending);
		pendingWrap.add(pendingValue);
		
		walletStatus.add(balanceWrap);
		walletStatus.add(pendingWrap);
		
		left.add(walletStatus);
		
		
		// my wallet info center
		JPanel addresses = new JPanel();
		addresses.setLayout(new BoxLayout(addresses, BoxLayout.PAGE_AXIS));
		addresses.setMaximumSize(new Dimension(width,100));
		addresses.setPreferredSize(new Dimension(width,100));
		addresses.setMinimumSize(new Dimension(width,100));
		
		// my wallet address
		JPanel myAddressPanel = new JPanel();
		myAddressPanel.setMinimumSize(new Dimension(width,50));
		myAddressPanel.setMaximumSize(new Dimension(width,50));
		myAddressPanel.setPreferredSize(new Dimension(width,50));
		myAddressPanel.setBorder(BorderFactory.createMatteBorder(20, 0, 0, 0, getForeground()));
		
		JLabel myAddress = new JLabel("My Address");
		myAddressPanel.setLayout(new BoxLayout(myAddressPanel, BoxLayout.LINE_AXIS));
		
		myAddressPanel.add(myAddress);
		//byte[] c = Blockchain.walletA.publicKey.getEncoded();
		//String b = Arrays.toString(c);
		JTextField hexAddress = new JTextField("code");
		hexAddress.setEditable(false); 

		hexAddress.setLayout(new BoxLayout(hexAddress, BoxLayout.LINE_AXIS));
		hexAddress.setMaximumSize(new Dimension(width,30));
		hexAddress.setMinimumSize(new Dimension(width,30));
		hexAddress.setPreferredSize(new Dimension(width,30));
	 
		addresses.add(myAddressPanel);
		addresses.add(hexAddress);
		left.add(addresses);

		
		
		
		
		
		
		
		
		
		// send to address area left
		JPanel sendCoinsWrapper = new JPanel();
		sendCoinsWrapper.setLayout(new BoxLayout(sendCoinsWrapper,BoxLayout.LINE_AXIS));
		sendCoinsWrapper.setMaximumSize(new Dimension(leftWidth,250));
		sendCoinsWrapper.setMinimumSize(new Dimension(leftWidth,250));
		sendCoinsWrapper.setPreferredSize(new Dimension(leftWidth,250));
	 
		JPanel sendCoins = new JPanel();
		
		sendCoins.setLayout(new BoxLayout(sendCoins,BoxLayout.PAGE_AXIS));
		sendCoins.setMaximumSize(new Dimension(leftWidth,250));
		sendCoins.setMinimumSize(new Dimension(leftWidth,250));
		sendCoins.setPreferredSize(new Dimension(leftWidth,250));
	 
		// title
		JLabel title = new JLabel("Send coins"); 
		title.setFont(new Font(Font.SANS_SERIF,Font.BOLD,13));	

		title.setMaximumSize(new Dimension(width,50));
		title.setMinimumSize(new Dimension(width,50));
		title.setPreferredSize(new Dimension(width,50));
		title.setLayout(new BoxLayout(title, BoxLayout.PAGE_AXIS));
		sendCoins.add(title);
		
		
		// inputs wrapper for coin rec info
		JPanel inputs = new JPanel(); 
		inputs.setLayout(new BoxLayout(inputs,BoxLayout.PAGE_AXIS));

		 
		// address
		JLabel addtitle = new JLabel("Address");
		inputs.add(addtitle);
		
		JTextField recAdd = new JTextField(); 
		recAdd.setMaximumSize(new Dimension(getWidth() + 75,40));		
		
		inputs.add(recAdd);
		
		
		// amount
		JLabel amtitle = new JLabel("Amount");
		inputs.add(amtitle);
		
		JTextField amount = new JTextField();
		amount.setMaximumSize(new Dimension(getWidth() + 75,40));
		
		inputs.add(amount);
		
		
		// submit
		JButton submit = new JButton("Send");
		submit.addActionListener(this);
		submit.setActionCommand("send");
		submit.setBounds(getBounds());
		submit.setMinimumSize(new Dimension(getWidth() - 262, 30));
		submit.setMaximumSize(new Dimension(getWidth() - 262, 30));
		
		
		inputs.add(submit);
		sendCoins.add(inputs);
		sendCoinsWrapper.add(sendCoins);
		
		left.add(sendCoinsWrapper);
		
		
		/**
		 * describing right area
		 */

		// add right layout
		BufferedImage img = ImageIO.read(this.getClass().getResource("./logo.png"));
		JLabel icon = new JLabel(new ImageIcon(img),SwingConstants.LEFT);
		
		// add logo to the right
		JPanel right = new JPanel();
		right.setBorder(BorderFactory.createEmptyBorder(25, 0, 0, 0));
		right.setBackground(new Color(220,220,220));
		right.setPreferredSize(new Dimension(150,height));
		right.add(icon,BorderLayout.WEST);
		
		right.add(new JLabel("Symbol: DTUC"));
		
		
		/**
		 * wrap up
		 */
	
		// add wrapping elements to view
		wrap.add(left);
		wrap.add(right,BorderLayout.EAST);
		
		getContentPane().add(wrap);
		return wrap;
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}

	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3146)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3630)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-01-14 20:18:13.436
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3146)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3630)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-01-14 20:18:13.440
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3146)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3630)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-01-14 20:18:15.455
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package blockchain;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Image;
import java.awt.Rectangle;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.io.InputStream;
import java.security.PublicKey;
import java.util.Arrays;

import javax.imageio.ImageIO;
import javax.swing.BorderFactory;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.SwingConstants;


public class WalletGUI extends JFrame implements ActionListener {
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	protected static WalletGUI win;
	protected static JPanel wrap;
	protected static int height = 500;
	protected static int width = 600;
	protected static int leftWidth = (int)((width*0.9) - 150);
	
	private Wallet myAccount =  Blockchain.walletA;
	private String myKey = 
	
	public void initGui() throws IOException {
		win = new WalletGUI();
		win.setSize(new Dimension(width,height));
		win.add(win.gui());
	    try {
	        InputStream imageInputStream = win.getClass().getResourceAsStream("./icon.png");
		    BufferedImage bufferedImage = ImageIO.read(imageInputStream);
		    win.setIconImage(bufferedImage);
		} catch (IOException exception) {
		    exception.printStackTrace();
		}
		win.setTitle("DTU cryptocoin wallet");
		win.setResizable(false);
		win.pack();
		win.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		win.setVisible(true);

	}
	
	public JPanel gui() throws IOException {

		getContentPane().setLayout(new BorderLayout());

		// init and set wrapper obj. defaults
		wrap = new JPanel();
		wrap.setBackground(new Color(235,235,235));
		wrap.setBorder(null);
		
		/**
		 * describing left area
		 */
 		
		// add left layout
		JPanel left = new JPanel();
		left.setLayout(new BoxLayout(left,BoxLayout.PAGE_AXIS));
		left.setBorder(BorderFactory.createEmptyBorder(0, 25, 25, 25));
		left.setPreferredSize(new Dimension(leftWidth, height));

		// header wrapper left
		JPanel headerWrapper = new JPanel();
		headerWrapper.setMaximumSize(new Dimension(width,75));
		headerWrapper.setPreferredSize(new Dimension(width,75));
		headerWrapper.setLayout(new BoxLayout(headerWrapper,BoxLayout.LINE_AXIS));
		
		// header
		JLabel header = new JLabel("DTU wallet");
		header.setMaximumSize(new Dimension(300,50));
		header.setFont(new Font(Font.SANS_SERIF, Font.TRUETYPE_FONT, 22));
		
		headerWrapper.add(header);
		left.add(headerWrapper,BorderLayout.NORTH);
	
		
		// my wallet status left
		JPanel walletStatus = new JPanel();
		walletStatus.setLayout(new BoxLayout(walletStatus,BoxLayout.PAGE_AXIS));
		walletStatus.setPreferredSize(new Dimension(width, 100));
		
		// wallet balance
		JPanel balanceWrap = new JPanel();	
		balanceWrap.setLayout(new BoxLayout(balanceWrap,BoxLayout.LINE_AXIS));	
		balanceWrap.setMaximumSize(new Dimension(width,30));
		
		JLabel balance = new JLabel("My Balance:    ");
		balance.setFont(new Font(Font.SANS_SERIF,Font.PLAIN,14));
  		
		JLabel balanceValue = new JLabel("16000.00" + " DTUC");
  		balanceValue.setFont(new Font(Font.SANS_SERIF,Font.BOLD,14));
		
  		balanceWrap.add(balance);
		balanceWrap.add(balanceValue);

		
		// pending balance in block nonce proccessing
		JPanel pendingWrap = new JPanel();
		pendingWrap.setLayout(new BoxLayout(pendingWrap,BoxLayout.LINE_AXIS));
 		pendingWrap.setMaximumSize(new Dimension(width,30));

		JLabel pending = new JLabel("Unconfirmed:  ");
		pending.setFont(new Font(Font.SANS_SERIF,Font.PLAIN,14));
		
		JLabel pendingValue = new JLabel("0.00" + " DTUC");
		pendingValue.setFont(new Font(Font.SANS_SERIF,Font.BOLD,14));
		
		pendingWrap.add(pending);
		pendingWrap.add(pendingValue);
		
		walletStatus.add(balanceWrap);
		walletStatus.add(pendingWrap);
		
		left.add(walletStatus);
		
		
		// my wallet info center
		JPanel addresses = new JPanel();
		addresses.setLayout(new BoxLayout(addresses, BoxLayout.PAGE_AXIS));
		addresses.setMaximumSize(new Dimension(width,100));
		addresses.setPreferredSize(new Dimension(width,100));
		addresses.setMinimumSize(new Dimension(width,100));
		
		// my wallet address
		JPanel myAddressPanel = new JPanel();
		myAddressPanel.setMinimumSize(new Dimension(width,50));
		myAddressPanel.setMaximumSize(new Dimension(width,50));
		myAddressPanel.setPreferredSize(new Dimension(width,50));
		myAddressPanel.setBorder(BorderFactory.createMatteBorder(20, 0, 0, 0, getForeground()));
		
		JLabel myAddress = new JLabel("My Address");
		myAddressPanel.setLayout(new BoxLayout(myAddressPanel, BoxLayout.LINE_AXIS));
		
		myAddressPanel.add(myAddress);
		//byte[] c = Blockchain.walletA.publicKey.getEncoded();
		//String b = Arrays.toString(c);
		JTextField hexAddress = new JTextField("code");
		hexAddress.setEditable(false); 

		hexAddress.setLayout(new BoxLayout(hexAddress, BoxLayout.LINE_AXIS));
		hexAddress.setMaximumSize(new Dimension(width,30));
		hexAddress.setMinimumSize(new Dimension(width,30));
		hexAddress.setPreferredSize(new Dimension(width,30));
	 
		addresses.add(myAddressPanel);
		addresses.add(hexAddress);
		left.add(addresses);

		
		
		
		
		
		
		
		
		
		// send to address area left
		JPanel sendCoinsWrapper = new JPanel();
		sendCoinsWrapper.setLayout(new BoxLayout(sendCoinsWrapper,BoxLayout.LINE_AXIS));
		sendCoinsWrapper.setMaximumSize(new Dimension(leftWidth,250));
		sendCoinsWrapper.setMinimumSize(new Dimension(leftWidth,250));
		sendCoinsWrapper.setPreferredSize(new Dimension(leftWidth,250));
	 
		JPanel sendCoins = new JPanel();
		
		sendCoins.setLayout(new BoxLayout(sendCoins,BoxLayout.PAGE_AXIS));
		sendCoins.setMaximumSize(new Dimension(leftWidth,250));
		sendCoins.setMinimumSize(new Dimension(leftWidth,250));
		sendCoins.setPreferredSize(new Dimension(leftWidth,250));
	 
		// title
		JLabel title = new JLabel("Send coins"); 
		title.setFont(new Font(Font.SANS_SERIF,Font.BOLD,13));	

		title.setMaximumSize(new Dimension(width,50));
		title.setMinimumSize(new Dimension(width,50));
		title.setPreferredSize(new Dimension(width,50));
		title.setLayout(new BoxLayout(title, BoxLayout.PAGE_AXIS));
		sendCoins.add(title);
		
		
		// inputs wrapper for coin rec info
		JPanel inputs = new JPanel(); 
		inputs.setLayout(new BoxLayout(inputs,BoxLayout.PAGE_AXIS));

		 
		// address
		JLabel addtitle = new JLabel("Address");
		inputs.add(addtitle);
		
		JTextField recAdd = new JTextField(); 
		recAdd.setMaximumSize(new Dimension(getWidth() + 75,40));		
		
		inputs.add(recAdd);
		
		
		// amount
		JLabel amtitle = new JLabel("Amount");
		inputs.add(amtitle);
		
		JTextField amount = new JTextField();
		amount.setMaximumSize(new Dimension(getWidth() + 75,40));
		
		inputs.add(amount);
		
		
		// submit
		JButton submit = new JButton("Send");
		submit.addActionListener(this);
		submit.setActionCommand("send");
		submit.setBounds(getBounds());
		submit.setMinimumSize(new Dimension(getWidth() - 262, 30));
		submit.setMaximumSize(new Dimension(getWidth() - 262, 30));
		
		
		inputs.add(submit);
		sendCoins.add(inputs);
		sendCoinsWrapper.add(sendCoins);
		
		left.add(sendCoinsWrapper);
		
		
		/**
		 * describing right area
		 */

		// add right layout
		BufferedImage img = ImageIO.read(this.getClass().getResource("./logo.png"));
		JLabel icon = new JLabel(new ImageIcon(img),SwingConstants.LEFT);
		
		// add logo to the right
		JPanel right = new JPanel();
		right.setBorder(BorderFactory.createEmptyBorder(25, 0, 0, 0));
		right.setBackground(new Color(220,220,220));
		right.setPreferredSize(new Dimension(150,height));
		right.add(icon,BorderLayout.WEST);
		
		right.add(new JLabel("Symbol: DTUC"));
		
		
		/**
		 * wrap up
		 */
	
		// add wrapping elements to view
		wrap.add(left);
		wrap.add(right,BorderLayout.EAST);
		
		getContentPane().add(wrap);
		return wrap;
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}

	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3146)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3630)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-01-14 20:18:15.464
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3146)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3630)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-01-14 20:18:15.467
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3146)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3630)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-01-14 20:18:19.481
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package blockchain;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Image;
import java.awt.Rectangle;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.io.InputStream;
import java.security.PublicKey;
import java.util.Arrays;

import javax.imageio.ImageIO;
import javax.swing.BorderFactory;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.SwingConstants;


public class WalletGUI extends JFrame implements ActionListener {
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	protected static WalletGUI win;
	protected static JPanel wrap;
	protected static int height = 500;
	protected static int width = 600;
	protected static int leftWidth = (int)((width*0.9) - 150);
	
	private Wallet myAccount =  Blockchain.walletA;
	private String myKey = Blockchain.walletA.
	
	public void initGui() throws IOException {
		win = new WalletGUI();
		win.setSize(new Dimension(width,height));
		win.add(win.gui());
	    try {
	        InputStream imageInputStream = win.getClass().getResourceAsStream("./icon.png");
		    BufferedImage bufferedImage = ImageIO.read(imageInputStream);
		    win.setIconImage(bufferedImage);
		} catch (IOException exception) {
		    exception.printStackTrace();
		}
		win.setTitle("DTU cryptocoin wallet");
		win.setResizable(false);
		win.pack();
		win.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		win.setVisible(true);

	}
	
	public JPanel gui() throws IOException {

		getContentPane().setLayout(new BorderLayout());

		// init and set wrapper obj. defaults
		wrap = new JPanel();
		wrap.setBackground(new Color(235,235,235));
		wrap.setBorder(null);
		
		/**
		 * describing left area
		 */
 		
		// add left layout
		JPanel left = new JPanel();
		left.setLayout(new BoxLayout(left,BoxLayout.PAGE_AXIS));
		left.setBorder(BorderFactory.createEmptyBorder(0, 25, 25, 25));
		left.setPreferredSize(new Dimension(leftWidth, height));

		// header wrapper left
		JPanel headerWrapper = new JPanel();
		headerWrapper.setMaximumSize(new Dimension(width,75));
		headerWrapper.setPreferredSize(new Dimension(width,75));
		headerWrapper.setLayout(new BoxLayout(headerWrapper,BoxLayout.LINE_AXIS));
		
		// header
		JLabel header = new JLabel("DTU wallet");
		header.setMaximumSize(new Dimension(300,50));
		header.setFont(new Font(Font.SANS_SERIF, Font.TRUETYPE_FONT, 22));
		
		headerWrapper.add(header);
		left.add(headerWrapper,BorderLayout.NORTH);
	
		
		// my wallet status left
		JPanel walletStatus = new JPanel();
		walletStatus.setLayout(new BoxLayout(walletStatus,BoxLayout.PAGE_AXIS));
		walletStatus.setPreferredSize(new Dimension(width, 100));
		
		// wallet balance
		JPanel balanceWrap = new JPanel();	
		balanceWrap.setLayout(new BoxLayout(balanceWrap,BoxLayout.LINE_AXIS));	
		balanceWrap.setMaximumSize(new Dimension(width,30));
		
		JLabel balance = new JLabel("My Balance:    ");
		balance.setFont(new Font(Font.SANS_SERIF,Font.PLAIN,14));
  		
		JLabel balanceValue = new JLabel("16000.00" + " DTUC");
  		balanceValue.setFont(new Font(Font.SANS_SERIF,Font.BOLD,14));
		
  		balanceWrap.add(balance);
		balanceWrap.add(balanceValue);

		
		// pending balance in block nonce proccessing
		JPanel pendingWrap = new JPanel();
		pendingWrap.setLayout(new BoxLayout(pendingWrap,BoxLayout.LINE_AXIS));
 		pendingWrap.setMaximumSize(new Dimension(width,30));

		JLabel pending = new JLabel("Unconfirmed:  ");
		pending.setFont(new Font(Font.SANS_SERIF,Font.PLAIN,14));
		
		JLabel pendingValue = new JLabel("0.00" + " DTUC");
		pendingValue.setFont(new Font(Font.SANS_SERIF,Font.BOLD,14));
		
		pendingWrap.add(pending);
		pendingWrap.add(pendingValue);
		
		walletStatus.add(balanceWrap);
		walletStatus.add(pendingWrap);
		
		left.add(walletStatus);
		
		
		// my wallet info center
		JPanel addresses = new JPanel();
		addresses.setLayout(new BoxLayout(addresses, BoxLayout.PAGE_AXIS));
		addresses.setMaximumSize(new Dimension(width,100));
		addresses.setPreferredSize(new Dimension(width,100));
		addresses.setMinimumSize(new Dimension(width,100));
		
		// my wallet address
		JPanel myAddressPanel = new JPanel();
		myAddressPanel.setMinimumSize(new Dimension(width,50));
		myAddressPanel.setMaximumSize(new Dimension(width,50));
		myAddressPanel.setPreferredSize(new Dimension(width,50));
		myAddressPanel.setBorder(BorderFactory.createMatteBorder(20, 0, 0, 0, getForeground()));
		
		JLabel myAddress = new JLabel("My Address");
		myAddressPanel.setLayout(new BoxLayout(myAddressPanel, BoxLayout.LINE_AXIS));
		
		myAddressPanel.add(myAddress);
		//byte[] c = Blockchain.walletA.publicKey.getEncoded();
		//String b = Arrays.toString(c);
		JTextField hexAddress = new JTextField("code");
		hexAddress.setEditable(false); 

		hexAddress.setLayout(new BoxLayout(hexAddress, BoxLayout.LINE_AXIS));
		hexAddress.setMaximumSize(new Dimension(width,30));
		hexAddress.setMinimumSize(new Dimension(width,30));
		hexAddress.setPreferredSize(new Dimension(width,30));
	 
		addresses.add(myAddressPanel);
		addresses.add(hexAddress);
		left.add(addresses);

		
		
		
		
		
		
		
		
		
		// send to address area left
		JPanel sendCoinsWrapper = new JPanel();
		sendCoinsWrapper.setLayout(new BoxLayout(sendCoinsWrapper,BoxLayout.LINE_AXIS));
		sendCoinsWrapper.setMaximumSize(new Dimension(leftWidth,250));
		sendCoinsWrapper.setMinimumSize(new Dimension(leftWidth,250));
		sendCoinsWrapper.setPreferredSize(new Dimension(leftWidth,250));
	 
		JPanel sendCoins = new JPanel();
		
		sendCoins.setLayout(new BoxLayout(sendCoins,BoxLayout.PAGE_AXIS));
		sendCoins.setMaximumSize(new Dimension(leftWidth,250));
		sendCoins.setMinimumSize(new Dimension(leftWidth,250));
		sendCoins.setPreferredSize(new Dimension(leftWidth,250));
	 
		// title
		JLabel title = new JLabel("Send coins"); 
		title.setFont(new Font(Font.SANS_SERIF,Font.BOLD,13));	

		title.setMaximumSize(new Dimension(width,50));
		title.setMinimumSize(new Dimension(width,50));
		title.setPreferredSize(new Dimension(width,50));
		title.setLayout(new BoxLayout(title, BoxLayout.PAGE_AXIS));
		sendCoins.add(title);
		
		
		// inputs wrapper for coin rec info
		JPanel inputs = new JPanel(); 
		inputs.setLayout(new BoxLayout(inputs,BoxLayout.PAGE_AXIS));

		 
		// address
		JLabel addtitle = new JLabel("Address");
		inputs.add(addtitle);
		
		JTextField recAdd = new JTextField(); 
		recAdd.setMaximumSize(new Dimension(getWidth() + 75,40));		
		
		inputs.add(recAdd);
		
		
		// amount
		JLabel amtitle = new JLabel("Amount");
		inputs.add(amtitle);
		
		JTextField amount = new JTextField();
		amount.setMaximumSize(new Dimension(getWidth() + 75,40));
		
		inputs.add(amount);
		
		
		// submit
		JButton submit = new JButton("Send");
		submit.addActionListener(this);
		submit.setActionCommand("send");
		submit.setBounds(getBounds());
		submit.setMinimumSize(new Dimension(getWidth() - 262, 30));
		submit.setMaximumSize(new Dimension(getWidth() - 262, 30));
		
		
		inputs.add(submit);
		sendCoins.add(inputs);
		sendCoinsWrapper.add(sendCoins);
		
		left.add(sendCoinsWrapper);
		
		
		/**
		 * describing right area
		 */

		// add right layout
		BufferedImage img = ImageIO.read(this.getClass().getResource("./logo.png"));
		JLabel icon = new JLabel(new ImageIcon(img),SwingConstants.LEFT);
		
		// add logo to the right
		JPanel right = new JPanel();
		right.setBorder(BorderFactory.createEmptyBorder(25, 0, 0, 0));
		right.setBackground(new Color(220,220,220));
		right.setPreferredSize(new Dimension(150,height));
		right.add(icon,BorderLayout.WEST);
		
		right.add(new JLabel("Symbol: DTUC"));
		
		
		/**
		 * wrap up
		 */
	
		// add wrapping elements to view
		wrap.add(left);
		wrap.add(right,BorderLayout.EAST);
		
		getContentPane().add(wrap);
		return wrap;
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}

	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3146)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3630)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-01-14 20:18:19.491
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3146)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3630)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-01-14 20:18:19.494
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3146)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3630)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-01-14 20:18:20.508
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package blockchain;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Image;
import java.awt.Rectangle;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.io.InputStream;
import java.security.PublicKey;
import java.util.Arrays;

import javax.imageio.ImageIO;
import javax.swing.BorderFactory;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.SwingConstants;


public class WalletGUI extends JFrame implements ActionListener {
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	protected static WalletGUI win;
	protected static JPanel wrap;
	protected static int height = 500;
	protected static int width = 600;
	protected static int leftWidth = (int)((width*0.9) - 150);
	
	private Wallet myAccount =  Blockchain.walletA;
	private String myKey = Blockchain.walletA..publicKey.toString();
	
	public void initGui() throws IOException {
		win = new WalletGUI();
		win.setSize(new Dimension(width,height));
		win.add(win.gui());
	    try {
	        InputStream imageInputStream = win.getClass().getResourceAsStream("./icon.png");
		    BufferedImage bufferedImage = ImageIO.read(imageInputStream);
		    win.setIconImage(bufferedImage);
		} catch (IOException exception) {
		    exception.printStackTrace();
		}
		win.setTitle("DTU cryptocoin wallet");
		win.setResizable(false);
		win.pack();
		win.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		win.setVisible(true);

	}
	
	public JPanel gui() throws IOException {

		getContentPane().setLayout(new BorderLayout());

		// init and set wrapper obj. defaults
		wrap = new JPanel();
		wrap.setBackground(new Color(235,235,235));
		wrap.setBorder(null);
		
		/**
		 * describing left area
		 */
 		
		// add left layout
		JPanel left = new JPanel();
		left.setLayout(new BoxLayout(left,BoxLayout.PAGE_AXIS));
		left.setBorder(BorderFactory.createEmptyBorder(0, 25, 25, 25));
		left.setPreferredSize(new Dimension(leftWidth, height));

		// header wrapper left
		JPanel headerWrapper = new JPanel();
		headerWrapper.setMaximumSize(new Dimension(width,75));
		headerWrapper.setPreferredSize(new Dimension(width,75));
		headerWrapper.setLayout(new BoxLayout(headerWrapper,BoxLayout.LINE_AXIS));
		
		// header
		JLabel header = new JLabel("DTU wallet");
		header.setMaximumSize(new Dimension(300,50));
		header.setFont(new Font(Font.SANS_SERIF, Font.TRUETYPE_FONT, 22));
		
		headerWrapper.add(header);
		left.add(headerWrapper,BorderLayout.NORTH);
	
		
		// my wallet status left
		JPanel walletStatus = new JPanel();
		walletStatus.setLayout(new BoxLayout(walletStatus,BoxLayout.PAGE_AXIS));
		walletStatus.setPreferredSize(new Dimension(width, 100));
		
		// wallet balance
		JPanel balanceWrap = new JPanel();	
		balanceWrap.setLayout(new BoxLayout(balanceWrap,BoxLayout.LINE_AXIS));	
		balanceWrap.setMaximumSize(new Dimension(width,30));
		
		JLabel balance = new JLabel("My Balance:    ");
		balance.setFont(new Font(Font.SANS_SERIF,Font.PLAIN,14));
  		
		JLabel balanceValue = new JLabel("16000.00" + " DTUC");
  		balanceValue.setFont(new Font(Font.SANS_SERIF,Font.BOLD,14));
		
  		balanceWrap.add(balance);
		balanceWrap.add(balanceValue);

		
		// pending balance in block nonce proccessing
		JPanel pendingWrap = new JPanel();
		pendingWrap.setLayout(new BoxLayout(pendingWrap,BoxLayout.LINE_AXIS));
 		pendingWrap.setMaximumSize(new Dimension(width,30));

		JLabel pending = new JLabel("Unconfirmed:  ");
		pending.setFont(new Font(Font.SANS_SERIF,Font.PLAIN,14));
		
		JLabel pendingValue = new JLabel("0.00" + " DTUC");
		pendingValue.setFont(new Font(Font.SANS_SERIF,Font.BOLD,14));
		
		pendingWrap.add(pending);
		pendingWrap.add(pendingValue);
		
		walletStatus.add(balanceWrap);
		walletStatus.add(pendingWrap);
		
		left.add(walletStatus);
		
		
		// my wallet info center
		JPanel addresses = new JPanel();
		addresses.setLayout(new BoxLayout(addresses, BoxLayout.PAGE_AXIS));
		addresses.setMaximumSize(new Dimension(width,100));
		addresses.setPreferredSize(new Dimension(width,100));
		addresses.setMinimumSize(new Dimension(width,100));
		
		// my wallet address
		JPanel myAddressPanel = new JPanel();
		myAddressPanel.setMinimumSize(new Dimension(width,50));
		myAddressPanel.setMaximumSize(new Dimension(width,50));
		myAddressPanel.setPreferredSize(new Dimension(width,50));
		myAddressPanel.setBorder(BorderFactory.createMatteBorder(20, 0, 0, 0, getForeground()));
		
		JLabel myAddress = new JLabel("My Address");
		myAddressPanel.setLayout(new BoxLayout(myAddressPanel, BoxLayout.LINE_AXIS));
		
		myAddressPanel.add(myAddress);
		//byte[] c = Blockchain.walletA.publicKey.getEncoded();
		//String b = Arrays.toString(c);
		JTextField hexAddress = new JTextField("code");
		hexAddress.setEditable(false); 

		hexAddress.setLayout(new BoxLayout(hexAddress, BoxLayout.LINE_AXIS));
		hexAddress.setMaximumSize(new Dimension(width,30));
		hexAddress.setMinimumSize(new Dimension(width,30));
		hexAddress.setPreferredSize(new Dimension(width,30));
	 
		addresses.add(myAddressPanel);
		addresses.add(hexAddress);
		left.add(addresses);

		
		
		
		
		
		
		
		
		
		// send to address area left
		JPanel sendCoinsWrapper = new JPanel();
		sendCoinsWrapper.setLayout(new BoxLayout(sendCoinsWrapper,BoxLayout.LINE_AXIS));
		sendCoinsWrapper.setMaximumSize(new Dimension(leftWidth,250));
		sendCoinsWrapper.setMinimumSize(new Dimension(leftWidth,250));
		sendCoinsWrapper.setPreferredSize(new Dimension(leftWidth,250));
	 
		JPanel sendCoins = new JPanel();
		
		sendCoins.setLayout(new BoxLayout(sendCoins,BoxLayout.PAGE_AXIS));
		sendCoins.setMaximumSize(new Dimension(leftWidth,250));
		sendCoins.setMinimumSize(new Dimension(leftWidth,250));
		sendCoins.setPreferredSize(new Dimension(leftWidth,250));
	 
		// title
		JLabel title = new JLabel("Send coins"); 
		title.setFont(new Font(Font.SANS_SERIF,Font.BOLD,13));	

		title.setMaximumSize(new Dimension(width,50));
		title.setMinimumSize(new Dimension(width,50));
		title.setPreferredSize(new Dimension(width,50));
		title.setLayout(new BoxLayout(title, BoxLayout.PAGE_AXIS));
		sendCoins.add(title);
		
		
		// inputs wrapper for coin rec info
		JPanel inputs = new JPanel(); 
		inputs.setLayout(new BoxLayout(inputs,BoxLayout.PAGE_AXIS));

		 
		// address
		JLabel addtitle = new JLabel("Address");
		inputs.add(addtitle);
		
		JTextField recAdd = new JTextField(); 
		recAdd.setMaximumSize(new Dimension(getWidth() + 75,40));		
		
		inputs.add(recAdd);
		
		
		// amount
		JLabel amtitle = new JLabel("Amount");
		inputs.add(amtitle);
		
		JTextField amount = new JTextField();
		amount.setMaximumSize(new Dimension(getWidth() + 75,40));
		
		inputs.add(amount);
		
		
		// submit
		JButton submit = new JButton("Send");
		submit.addActionListener(this);
		submit.setActionCommand("send");
		submit.setBounds(getBounds());
		submit.setMinimumSize(new Dimension(getWidth() - 262, 30));
		submit.setMaximumSize(new Dimension(getWidth() - 262, 30));
		
		
		inputs.add(submit);
		sendCoins.add(inputs);
		sendCoinsWrapper.add(sendCoins);
		
		left.add(sendCoinsWrapper);
		
		
		/**
		 * describing right area
		 */

		// add right layout
		BufferedImage img = ImageIO.read(this.getClass().getResource("./logo.png"));
		JLabel icon = new JLabel(new ImageIcon(img),SwingConstants.LEFT);
		
		// add logo to the right
		JPanel right = new JPanel();
		right.setBorder(BorderFactory.createEmptyBorder(25, 0, 0, 0));
		right.setBackground(new Color(220,220,220));
		right.setPreferredSize(new Dimension(150,height));
		right.add(icon,BorderLayout.WEST);
		
		right.add(new JLabel("Symbol: DTUC"));
		
		
		/**
		 * wrap up
		 */
	
		// add wrapping elements to view
		wrap.add(left);
		wrap.add(right,BorderLayout.EAST);
		
		getContentPane().add(wrap);
		return wrap;
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}

	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3146)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3630)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-01-14 20:18:20.518
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3146)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3630)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-01-14 20:18:20.522
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3146)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3630)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)
