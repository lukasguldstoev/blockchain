package blockchain;

import java.util.ArrayList;
 


public class Blockchain {

	public static ArrayList<Block> blockchain = new ArrayList<Block>(); 

	public static void main(String[] args) {	
		//add our blocks to the blockchain ArrayList:
		blockchain.add(new Block("Hi im the first block", "0"));		
		blockchain.add(new Block("Yo im the second block",blockchain.get(blockchain.size()-1).hash)); 
		blockchain.add(new Block("Hey im the third block",blockchain.get(blockchain.size()-1).hash));
		
		System.out.println(blockchainToString(blockchain));
	}
	
	public static Boolean isChainValid() {
		Block currentBlock; 
		Block previousBlock;
		
		//loop through blockchain to check hashes:
		for(int i=1; i < blockchain.size(); i++) {
			currentBlock = blockchain.get(i);
			previousBlock = blockchain.get(i-1);
			//compare registered hash and calculated hash:
			if(!currentBlock.hash.equals(currentBlock.calculateHash()) ){
				System.out.println("Current Hashes not equal");			
				return false;
			}
			//compare previous hash and registered previous hash
			if(!previousBlock.hash.equals(currentBlock.previousHash) ) {
				System.out.println("Previous Hashes not equal");
				return false;
			}
		}
		return true;
	}
	
	public String blockchainToString(ArrayList<Block> blockchain) {
		String blocks = "";
		Block block;
		
		for (int i = 0; i < blockchain.size(); i++) {
			block = blockchain.get(i);
			blocks += "\n--new block------\n"; 
			blocks += "block id: " + i;
			blocks += "nounce: " + block.nonce;
			blocks += "hash: " + block.hash;
			blocks += "prev. hash: " + block.previousHash;
			blocks += "data: " + block.data;
			blocks += "timestamp: " + block.timeStamp;
			blocks += "\n--block end------\n"; 
		}
		
		return blocks;
	}
	
}
